name: pytest

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GAMS_VERSION: 25.1.1

jobs:
  pytest:
    strategy:
      matrix:
        os:
        - macos-latest
        - ubuntu-latest
        # - windows-latest
        include:
        - os: macos-latest
          GAMS_OS: macosx
          marks: not performance and not rixmp
        - os: ubuntu-latest
          GAMS_OS: linux
          marks: not performance and not rixmp
        # - os: windows-latest
        #   GAMS_OS: windows
        #   marks: not performance and not rixmp

      fail-fast: false

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2

    - name: Use OpenJDK 14 (macOS only)
      if: ${{ startsWith(matrix.os, 'macos') }}
      uses: actions/setup-java@v1
      with:
        java-version: '14'

    # - uses: r-lib/actions/setup-r@master
    #   if: ${{ contains(matrix.os, 'ubuntu') }}

    # Temporarily disabled for debugging
    # - name: Cache GAMS installer, Python and R packages
    #   uses: actions/cache@v2
    #   with:
    #     path: |
    #       gams
    #       $HOME/.cache/pip
    #       $HOME/Library/Caches/pip
    #       $HOME/Local Settings/Application Data/pip/Cache
    #       ${{ env.R_LIBS_USER }}
    #     key: ${{ matrix.os }}-${{ env.GAMS_VERSION }}
    #     restore-keys: ${{ matrix.os }}-

    - name: Install system dependencies
      env:
        CI_OS: ${{ matrix.os }}
        GAMS_OS: ${{ matrix.GAMS_OS }}
      run: |
        ci/install-curl.sh
        ci/install-gams.sh
        ci/install-graphviz.sh
      shell: bash

    # - name: (windows) Finalize GAMS install
    #   if: ${{ contains(matrix.os, 'windows') }}
    #   run: |
    #     Start-Process "gams\gams.exe" "/SP- /SILENT /NORESTART" -Wait

    - name: Check GAMS
      run: gams

    # - name: (linux) Install system R dependencies
    #   # NB this is faster than allowing remotes::install_deps() to do the
    #   #    installation, below. Not all packages are available in 18.04.
    #   if: ${{ contains(matrix.os, 'ubuntu') }}
    #   run: sudo apt install -q libcurl4-openssl-dev r-cran-devtools

    - name: Upgrade pip, wheel
      run: python -m pip install --upgrade pip wheel

    - name: Install the Python package and dependencies
      run: pip install .[docs,tests,tutorial]

    # - name: (linux) Install the R package and dependencies
    #   if: ${{ contains(matrix.os, 'ubuntu') }}
    #   run: |
    #     install.packages(c("devtools", "IRkernel", "rcmdcheck", "remotes"))
    #     remotes::install_deps("rixmp", dependencies = TRUE)
    #     IRkernel::installspec()
    #     library(devtools)
    #     devtools::install("rixmp")
    #   shell: Rscript {0}

    - name: Run pytest
      run: pytest ixmp -m "${{ matrix.marks }}" --verbose --cov-report=xml

    - name: Upload test coverage to Codecov.io
      uses: codecov/codecov-action@v1
